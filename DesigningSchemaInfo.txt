
Refined Database Schema for Gradebook

1. Department Table
- department_id: INT, AUTO_INCREMENT, PRIMARY KEY
- department_name: VARCHAR
- department_code: VARCHAR
Explanation: Stores departmental details, foundational for organizing courses.

2. Course Table
- course_id: INT, AUTO_INCREMENT, PRIMARY KEY
- department_id: INT, FOREIGN KEY REFERENCES Department(department_id)
- course_number: VARCHAR
- course_name: VARCHAR
- semester_offered: ENUM('Fall', 'Spring', 'Summer')
- year_offered: YEAR
- student_capacity: INT
Explanation: Contains course information, organized by department.

3. GradingComponent Table
- component_id: INT, AUTO_INCREMENT, PRIMARY KEY
- component_name: VARCHAR
Explanation: Defines various grading components (e.g., Participation, Homework), allowing dynamic grading schemes.

4. CourseGradingPolicy Table
- policy_id: INT, AUTO_INCREMENT, PRIMARY KEY
- course_id: INT, FOREIGN KEY REFERENCES Course(course_id)
- component_id: INT, FOREIGN KEY REFERENCES GradingComponent(component_id)
- weight: DECIMAL
Explanation: Links courses to grading components, defining their weight within a course's grading policy for flexibility.

5. Assignment Table
- assignment_id: INT, AUTO_INCREMENT, PRIMARY KEY
- course_id: INT, FOREIGN KEY REFERENCES Course(course_id)
- component_id: INT, FOREIGN KEY REFERENCES GradingComponent(component_id)
- assignment_name: VARCHAR
- total_points: INT
Explanation: Supports unspecified numbers of assignments per grading component, linked to courses.

6. Student Table
- student_id: INT, AUTO_INCREMENT, PRIMARY KEY
- first_name: VARCHAR
- last_name: VARCHAR
- email: VARCHAR, UNIQUE
Explanation: Tracks student information.

7. Enrollment Table
- enrollment_id: INT, AUTO_INCREMENT, PRIMARY KEY
- student_id: INT, FOREIGN KEY REFERENCES Student(student_id)
- course_id: INT, FOREIGN KEY REFERENCES Course(course_id)
- semester: ENUM('Fall', 'Spring', 'Summer')
- year: YEAR
Explanation: Records enrollments, essential for tracking student-course registrations.

8. StudentAssignment Table
- student_assignment_id: INT, AUTO_INCREMENT, PRIMARY KEY
- assignment_id: INT, FOREIGN KEY REFERENCES Assignment(assignment_id)
- student_id: INT, FOREIGN KEY REFERENCES Student(student_id)
- points_earned: DECIMAL
- comments: TEXT
Explanation: Records students' performances on individual assignments.

Design Considerations:
- The schema is designed for flexibility in grading and assignments while being streamlined for easy management.
